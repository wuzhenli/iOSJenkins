# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

fastlane_version "1.0"
default_platform(:ios)


platform :ios do

  desc "Description of what the lane does"
  lane :beta do  #函数名称，执行打包的时候使用
	  ProjectName = 'testBugly' # 项目名称

  	# Method used to export the archive. Valid values are: app-store, ad-hoc, package, enterprise, development, developer-id
    export_method = 'development'
    scheme = ProjectName #项目名称  debug :testBugly  release : testBuglyRelease
    # The configuration to use when building the app. Defaults to 'Release'
    configuration = 'Debug' #模式，默认Release，还有Debug


	  time = Time.new.strftime("%Y%m%d") #获取时间格式
    version = get_version_number#获取版本号
    auto_increment_build_number = increment_build_number # 自动增加 build 号 + 1
	  build_number = get_build_number(xcodeproj: "#{ProjectName}.xcodeproj")
	  # puts 输出日志到终端, 并且指定颜色
	  puts "auto_increment_build_number:#{auto_increment_build_number}  fileBuildNum:#{build_number}".green
    ipaName = "#{configuration}_#{version}_#{build_number}_#{time}.ipa"
    gym(
       scheme:scheme, 
       export_method:export_method,#打包的类型
       configuration:configuration, 
       output_name:"#{ipaName}",#输出的包名
       output_directory:"./build"#输出的位置
     )
    build_app(export_method: export_method)
  	pgyer(api_key: "1e1f953bbbf678c08b2b6446e10e960b", user_key: "db9382b065962e14c7679812178965c1")
  	
   end


   # lane :CD do |values|
 
   #  gym(
   #  	scheme: 'iOSJenkins', 
   #  	project: "iOSJenkins.xcworkspace", 
   #  	clean: true, silent: true, 
   #  	include_bitcode: false, 
   #  	export_method: 'ad-hoc'
   #  )
 
   #  emails = values[:test_email] ? values[:test_email] : ['[email]'] # You can list more emails here
   #  groups = values[:test_email] ? nil : nil # You can define groups on the web and reference them here
 
    # crashlytics(api_token: '[CRASHLYTICS_API_TOKEN]',
    #          build_secret: '[CRASHLYTICS_ORG_SECRET]',
    #                emails: emails,
    #                groups: groups,
    #                 notes: 'Distributed with fastlane', # Check out the changelog_from_git_commits action
    #         notifications: true) # Should this distribution notify your testers via email?
 
    # end
end
